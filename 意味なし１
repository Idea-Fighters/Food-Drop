items = []  

 

def insert(pos, elem) :   #O(n) 삽입하면 밀어서 ..

    items.insert(pos, elem)

 

def delete(pos) :  #O(n) 1번 삭제하면 앞으로 이동

    items.pop(pos)  

 

def getEntry(pos): return items[pos]

 

def isEmpty( ):

    return size() == 0

    #if len(items) == 0 :

        #return True

    #else :

       # return False

 

#def isEmpty( ): return len(items) == 0

 

def size( ):   #리스트의 크기 반환

    return len(items)

def clear( ):   

    #global items

    items = []      

 

def find(item) : return items.index(item)

def replace(pos, elem): items[pos] = elem

def sort() : items.sort()

def merge(lst) : items.extend(lst)

 

def display(msg='ArrayList:' ):  #디폴트 매개변수

    print(msg, size(), items) #items값은 파이썬의 리스트를 문자열로 출력

 

 

display('파이썬 리스트로 구현한 리스트 테스트')

insert(0, 10)  #[10]

insert(0, 20)  #[20,10]

insert(1, 30)  #[20,30,10] 

insert(size(), 40)  #[20,30,10,40] 

insert(2, 50)  #[20,30,50,10,40] 

display("파이썬 리스트로 구현한 List(삽입x5): ")

sort()   #[10,20,30,40,50] 

display("파이썬 리스트로 구현한 List(정렬후): ")

replace(2, 90)  #[10,20,90,40,50] 

display("파이썬 리스트로 구현한 List(교체x1): ")

delete(2)   #[10,20,40,50]  

display("파이썬 리스트로 구현한 List(삭제x1): ")

delete(size() - 1) #[10,20,40] 

display("파이썬 리스트로 구현한 List(삭제x2): ")

delete(0) #[20,40] 

display("파이썬 리스트로 구현한 List(삭제x3): ")

lst = [ 1, 2, 3 ]

merge(lst)  #[20,40, 1,2,3] 

display("파이썬 리스트로 구현한 List(병합+3): ")

clear()

display("파이썬 리스트로 구현한 List(정리후): ")  #정리?

display()

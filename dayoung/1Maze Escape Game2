def print_maze(maze):
    for row in maze:
        print("".join(row))

def escape_maze(maze):
    for i in range(len(maze)):
        for j in range(len(maze[0])):
            if maze[i][j] == 'S':
                start_row, start_col = i, j
                break

    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]
    stack = [(start_row, start_col)]
    while stack:
        current_row, current_col = stack.pop()
        if maze[current_row][current_col] == 'E':
            print("You escaped the maze!")
            return
        maze[current_row][current_col] = '*'
        for direction in directions:
            new_row, new_col = current_row + direction[0], current_col + direction[1]
            if 0 <= new_row < len(maze) and 0 <= new_col < len(maze[0]) and maze[new_row][new_col] in [' ', 'E']:
                stack.append((new_row, new_col))
            elif 0 <= new_row < len(maze) and 0 <= new_col < len(maze[0]) and maze[new_row][new_col] == '#':
                maze[new_row][new_col] = '*'
                stack.append((new_row, new_col))

    print("No escape route found.")

# 미로 설정
maze = [
    ['#', '#', '#', '#', '#', '#', '#', '#', '#'],
    ['#', 'S', ' ', ' ', ' ', ' ', ' ', ' ', '#'],
    ['#', '#', '#', '#', ' ', '#', '#', '#', '#'],
    ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#'],
    ['#', '#', '#', '#', '#', '#', '#', '#', '#'],
    ['#', ' ', ' ', ' ', ' ', ' ', ' ', 'E', '#'],
    ['#', '#', '#', '#', '#', '#', '#', '#', '#']
]

# 미로 탈출 시도
escape_maze(maze)


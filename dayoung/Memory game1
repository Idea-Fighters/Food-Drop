import random

def create_board():
    cards = list('AABBCCDDEEFFGGHH')
    random.shuffle(cards)
    board = [cards[i:i+4] for i in range(0, 16, 4)]
    return board

def print_board(board, revealed):
    for i in range(4):
        for j in range(4):
            if revealed[i][j]:
                print(board[i][j], end=' ')
            else:
                print('*', end=' ')
        print()

def get_input():
    while True:
        try:
            row, col = map(int, input("행과 열을 입력하세요 (0-3) (예: 1 2): ").split())
            if row in range(4) and col in range(4):
                return row, col
            else:
                print("잘못된 입력입니다. 0에서 3 사이의 숫자를 입력하세요.")
        except ValueError:
            print("잘못된 입력입니다. 두 개의 숫자를 입력하세요.")

def memory_game():
    board = create_board()
    revealed = [[False]*4 for _ in range(4)]
    attempts = 0
    matches = 0

    while matches < 8:
        print_board(board, revealed)
        print("첫 번째 카드를 선택하세요.")
        row1, col1 = get_input()
        while revealed[row1][col1]:
            print("이미 선택된 카드입니다. 다른 카드를 선택하세요.")
            row1, col1 = get_input()

        revealed[row1][col1] = True
        print_board(board, revealed)

        print("두 번째 카드를 선택하세요.")
        row2, col2 = get_input()
        while revealed[row2][col2] or (row1 == row2 and col1 == col2):
            print("잘못된 선택입니다. 다른 카드를 선택하세요.")
            row2, col2 = get_input()

        revealed[row2][col2] = True
        print_board(board, revealed)

        if board[row1][col1] == board[row2][col2]:
            print("매치되었습니다!")
            matches += 1
        else:
            print("매치되지 않았습니다.")
            revealed[row1][col1] = False
            revealed[row2][col2] = False

        attempts += 1
        print(f"현재 시도 횟수: {attempts}")
        print(f"맞춘 쌍의 수: {matches}")

    print("축하합니다! 모든 쌍을 맞추셨습니다!")
    print(f"총 시도 횟수: {attempts}")

memory_game()

import random

def Graphic():      #초기 그래픽 구현
    hang = []
    hang.append("┌───┐ ")
    hang.append("│   │ ")
    hang.append("│     ")
    hang.append("│     ")
    hang.append("│     ")
    hang.append("┴─────")
    
    man = {}       
    man[0] = ["│   ○ ", "│     "]               #display[1]
    man[1] = ["│   ○ ", "│  ─┤ "]               #display[2]
    man[2] = ["│   ○ ", "│  ─┼─"]               #display[3]
    man[3] = ["│   ○ ", "│  ─┼─", "│  ┌┘ "]     #display[4]
    man[4] = ["│   ○ ", "│  ─┼─", "│  ┌┴┐"]     #display[5]
    
    return hang, man

def Set_Display(man, hang, display):    #display[0] ~ [5] setting
    i = 2                               #starting point
    display.append(hang[:])             #display basic graphic
    for M in man.values():
        dis, j = hang[:], 0
        for m in M:
            dis[i + j] = m              #dis[2 ~ 5] append
            j += 1
        display.append(dis)

def Word_Selection(words):              #단어 선택
    return words[random.randint(0, len(words) - 1)]     #words[0 ~ n-1]

def Player_Input(res, wrg):
    ans = input("Enter the character : ").lower() #대답값 입력
    if ans == None or len(ans) != 1 or (ans in res) or (ans in wrg):
        print("Error 01 :: Invalid input. Please re-enter.")
        Player_Input(res, wrg)
    return ans

def Judgment(ans, w):
    return (ans in w) #정답여부(boolean)

def Logic(w, ans, res):     #핵심 코드, 정답일 경우만 실행
    i = 0
    for c in w:
        if c == ans:
            res[i] = c      #result[i] update: '_' → c
        i += 1
        
def Print_Display(result, display, index):
    print("".join(result))
    for line in display[index]:
        print(line)
    
def Finish(success, w):     #게임이 끝났을 때
    if success:             #정답인 경우
        print("Game Clear! The answer is a [", end="")
        print("".join(w), end="")
        print("].\nYou saved a life.")
    if not success:         #오답인 경우
        print("Game Over! The answer is a [", end="")
        print("".join(w), end="")
        print("].\nYou didn\'t save lives.")

hang, man = Graphic()  #행맨 그래픽 구현(list, Dictionary)
display = []           #화면정보(list)
Set_Display(man, hang, display)        #display graphic setting
words = """love door moon python""".split()     #단어들(list)
word = list(Word_Selection(words))     #단어 선택(list)
result = list('_' * len(word))     #결과표시기(list)
success = False    #정답여부(boolean)
wrong = []         #오답(list)
fail = 0           #오답 횟수(int)

print("This word is in ", len(word), "letters.")    #단어의 문자 수
while fail < 5:                                     #오답 횟수 5회 미만
    answer = Player_Input(result, wrong)               #입력
    right = Judgment(answer, word)                  #판단
    
    if right:                                       #정답인 경우
        Logic(word, answer, result)                 #result 값 수정
        if result == word:                              #정답을 모두 맞춘 경우
            success = True
            Finish(success, word)
            break                                       #게임 종료
    else:       #오답인 경우
        wrong.append(answer)    #오답리스트에 추가
        fail += 1              #오답횟수 증가
    Print_Display(result, display, fail)
    print("Wrong letters: ", wrong)
    
if not success:         #맞추지 못하고 게임이 끝난 경우
    Finish(success, word)

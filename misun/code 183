import RPi.GPIO as GPIO
import time

# GPIO 설정
GPIO.setmode(GPIO.BCM)

# 초음파 센서 핀 설정
TRIG_PIN = 23
ECHO_PIN = 24
GPIO.setup(TRIG_PIN, GPIO.OUT)
GPIO.setup(ECHO_PIN, GPIO.IN)

# 모터 핀 설정
MOTOR_PIN_FORWARD = 17
MOTOR_PIN_BACKWARD = 18
GPIO.setup(MOTOR_PIN_FORWARD, GPIO.OUT)
GPIO.setup(MOTOR_PIN_BACKWARD, GPIO.OUT)

# 초음파 거리 측정 함수
def measure_distance():
    # 초음파 발신
    GPIO.output(TRIG_PIN, GPIO.LOW)
    time.sleep(0.5)
    GPIO.output(TRIG_PIN, GPIO.HIGH)
    time.sleep(0.00001)
    GPIO.output(TRIG_PIN, GPIO.LOW)
    
    # 초음파 수신
    pulse_start = time.time()
    while GPIO.input(ECHO_PIN) == 0:
        pulse_start = time.time()
    pulse_end = time.time()
    while GPIO.input(ECHO_PIN) == 1:
        pulse_end = time.time()
    
    # 거리 계산 (음속: 343m/s, 거리 = 시간 * 속력 / 2)
    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 34300 / 2
    return distance

# 차량 제어 함수
def control_car():
    try:
        while True:
            distance = measure_distance()
            print("Distance: %.2f cm" % distance)
            
            # 장애물 감지 시 후진
            if distance < 30:
                GPIO.output(MOTOR_PIN_FORWARD, GPIO.LOW)
                GPIO.output(MOTOR_PIN_BACKWARD, GPIO.HIGH)
                time.sleep(1)  # 1초 후 정지
                GPIO.output(MOTOR_PIN_BACKWARD, GPIO.LOW)
            else:
                GPIO.output(MOTOR_PIN_FORWARD, GPIO.HIGH)
                GPIO.output(MOTOR_PIN_BACKWARD, GPIO.LOW)
            
            time.sleep(0.1)  # 0.1초마다 거리 측정
    except KeyboardInterrupt:
        pass
    finally:
        GPIO.cleanup()

if __name__ == '__main__':
    control_car()

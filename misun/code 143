import requests
from cryptography import x509
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives import hashes
from cryptography.x509.oid import NameOID

def get_certificate_info(url):
    response = requests.get(url, verify=True)
    cert = response.raw.connection.sock.getpeercert(binary_form=True)
    x509_cert = x509.load_der_x509_certificate(cert, default_backend())

    return x509_cert

def print_certificate_details(cert):
    subject = cert.subject.get_attributes_for_oid(NameOID.COMMON_NAME)[0].value
    issuer = cert.issuer.get_attributes_for_oid(NameOID.COMMON_NAME)[0].value
    not_before = cert.not_valid_before
    not_after = cert.not_valid_after
    serial_number = cert.serial_number
    fingerprint = cert.fingerprint(hashes.SHA256())

    print(f"Subject: {subject}")
    print(f"Issuer: {issuer}")
    print(f"Valid from: {not_before}")
    print(f"Valid until: {not_after}")
    print(f"Serial Number: {serial_number}")
    print(f"SHA-256 Fingerprint: {fingerprint.hex()}")

# URL에 대한 HTTPS 요청 및 인증서 정보 가져오기
url = "https://www.example.com"
certificate = get_certificate_info(url)

# 인증서 세부 정보 출력
print_certificate_details(certificate)

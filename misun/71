import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error

# 데이터 생성
X, y = make_regression(n_samples=100, n_features=1, noise=0.1, random_state=42)

# 데이터 시각화
plt.scatter(X, y)
plt.xlabel('Feature')
plt.ylabel('Target')
plt.title('Generated Data')
plt.show()

# 훈련 데이터와 테스트 데이터로 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 의사 결정 트리 회귀 모델 학습
model = DecisionTreeRegressor(random_state=42)
model.fit(X_train, y_train)

# 테스트 데이터로 예측
y_pred = model.predict(X_test)

# 평균 제곱 오차(MSE) 출력
mse = mean_squared_error(y_test, y_pred)
print("평균 제곱 오차(MSE):", mse)

# 예측 결과 시각화
plt.scatter(X_test, y_test, label='True')
plt.scatter(X_test, y_pred, color='red', label='Predicted')
plt.xlabel('Feature')
plt.ylabel('Target')
plt.title('Regression Prediction')
plt.legend()
plt.show()

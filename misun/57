import numpy as np
import matplotlib.pyplot as plt

# 차량 모델 파라미터
mass = 1000  # 차량 질량 (kg)
c_drag = 0.2  # 공기 저항 계수
c_rolling = 10  # 롤링 저항 계수
wheel_radius = 0.3  # 바퀴 반지름 (m)

# 초기 상태
initial_position = 0  # 초기 위치 (m)
initial_velocity = 0  # 초기 속도 (m/s)

# 주행 조건
total_time = 20  # 총 주행 시간 (s)
dt = 0.1  # 시간 간격 (s)

# 제어 입력 (여기서는 간단히 주행을 유지하기 위한 간단한 PID 제어를 시뮬레이션)
kp = 100  # 비례 제어 게인
ki = 0.1  # 적분 제어 게인
kd = 10  # 미분 제어 게인

# 주행 시뮬레이션 함수
def simulate_drive():
    time = np.arange(0, total_time, dt)
    position = np.zeros_like(time)
    velocity = np.zeros_like(time)

    # 초기 상태 설정
    position[0] = initial_position
    velocity[0] = initial_velocity

    # PID 제어 변수 초기화
    integral = 0
    prev_error = 0

    # 시뮬레이션 루프
    for i in range(1, len(time)):
        # 현재 상태
        current_position = position[i - 1]
        current_velocity = velocity[i - 1]

        # PID 제어를 사용하여 주행 제어 입력 계산
        error = 10 - current_position  # 목표 위치와 현재 위치의 오차 계산
        integral += error * dt  # 적분 제어
        derivative = (error - prev_error) / dt  # 미분 제어
        control_input = kp * error + ki * integral + kd * derivative

        # 주행 모델에 따른 다음 상태 계산
        drag_force = 0.5 * c_drag * current_velocity ** 2  # 공기 저항
        rolling_resistance = c_rolling * current_velocity  # 롤링 저항
        drive_force = control_input  # 제어 입력 (간단히 PID 제어 값으로 설정)
        acceleration = (drive_force - drag_force - rolling_resistance) / mass
        new_velocity = current_velocity + acceleration * dt
        new_position = current_position + current_velocity * dt + 0.5 * acceleration * dt ** 2

        # 결과 저장
        velocity[i] = new_velocity
        position[i] = new_position

        # 오차 업데이트
        prev_error = error

    return time, position, velocity

# 주행 시뮬레이션 실행
time, position, velocity = simulate_drive()

# 결과 시각화
plt.figure(figsize=(10, 6))
plt.plot(time, position, label='Position')
plt.plot(time, velocity, label='Velocity')
plt.xlabel('Time (s)')
plt.ylabel('Position (m) / Velocity (m/s)')
plt.title('Vehicle Simulation with PID Control')
plt.legend()
plt.grid(True)
plt.show()

from flask import Flask, request, jsonify
import jwt
import datetime

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key'

# 사용자 데이터베이스 (실제로는 데이터베이스를 사용해야 함)
users = {
    'admin': 'admin123',
    'user': 'user123'
}

# 로그인
@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')

    # 사용자 인증 확인
    if username in users and users[username] == password:
        # JWT 토큰 생성
        token = jwt.encode({'username': username, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=30)}, app.config['SECRET_KEY'])
        return jsonify({'token': token.decode('UTF-8')})
    else:
        return jsonify({'message': 'Invalid username or password'})

# 보호된 페이지
@app.route('/protected')
def protected():
    token = request.headers.get('Authorization')

    if not token:
        return jsonify({'message': 'Token is missing!'}), 401

    try:
        # JWT 토큰 검증
        data = jwt.decode(token, app.config['SECRET_KEY'])
        return jsonify({'message': 'Welcome, {}!'.format(data['username'])})
    except jwt.ExpiredSignatureError:
        return jsonify({'message': 'Token has expired!'}), 401
    except jwt.InvalidTokenError:
        return jsonify({'message': 'Invalid token!'}), 401

if __name__ == '__main__':
    app.run(debug=True)

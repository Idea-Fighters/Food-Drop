import pygame
import time
import random

pygame.init()

# 화면 설정
width, height = 600, 400
window = pygame.display.set_mode((width, height))
pygame.display.set_caption("Snake Game")

# 색상 정의
white = (255, 255, 255)
black = (0, 0, 0)
red = (213, 50, 80)
green = (0, 255, 0)
blue = (50, 153, 213)

# 뱀 초기 위치와 길이
snake_block = 10
snake_speed = 15
x1 = width / 2
y1 = height / 2
x1_change = 0
y1_change = 0
snake_list = []
length_of_snake = 1

# 먹이의 초기 위치
foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
foody = round(random.randrange(0, height - snake_block) / 10.0) * 10.0

# 게임 종료 여부
game_over = False

# 뱀의 길이를 증가시키는 함수
def increase_snake_length(snake_list):
    for x in snake_list:
        pygame.draw.rect(window, black, [x[0], x[1], snake_block, snake_block])

# 게임 오버 메시지를 출력하는 함수
def message(msg, color):
    font_style = pygame.font.SysFont(None, 50)
    mesg = font_style.render(msg, True, color)
    window.blit(mesg, [width / 2 - 200, height / 2 - 100])

clock = pygame.time.Clock()

# 게임 루프
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                x1_change = -snake_block
                y1_change = 0
            elif event.key == pygame.K_RIGHT:
                x1_change = snake_block
                y1_change = 0
            elif event.key == pygame.K_UP:
                y1_change = -snake_block
                x1_change = 0
            elif event.key == pygame.K_DOWN:
                y1_change = snake_block
                x1_change = 0

    # 뱀의 머리 위치 변경
    x1 += x1_change
    y1 += y1_change
    window.fill(blue)

    # 먹이 먹기
    pygame.draw.rect(window, green, [foodx, foody, snake_block, snake_block])
    snake_head = []
    snake_head.append(x1)
    snake_head.append(y1)
    snake_list.append(snake_head)
    if len(snake_list) > length_of_snake:
        del snake_list[0]

    # 자기 자신에게 닿았는지 확인
    for x in snake_list[:-1]:
        if x == snake_head:
            game_over = True

    # 뱀 그리기
    increase_snake_length(snake_list)

    # 먹이를 먹었을 때
    if x1 == foodx and y1 == foody:
        foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
        foody = round(random.randrange(0, height - snake_block) / 10.0) * 10.0
        length_of_snake += 1

    # 벽에 닿았을 때 게임 오버
    if x1 >= width or x1 < 0 or y1 >= height or y1 < 0:
        game_over = True

    pygame.display.update()

    # 게임 속도 조절
    clock.tick(snake_speed)

# 게임 오버 메시지 출력
window.fill(blue)
message("You Lost! Press Q-Quit or C-Play Again", red)
pygame.display.update()
time.sleep(2)

# 게임 종료 및 재시작
while game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_q:
                game_over = False
            if event.key == pygame.K_c:
                pygame.display.quit()
                pygame.quit()
                pygame.init()
                window = pygame.display.set_mode((width, height))
                pygame.display.set_caption("Snake Game")
                game_over = False
                x1 = width / 2
                y1 = height / 2
                x1_change = 0
                y1_change = 0
                snake_list = []
                length_of_snake = 1
                foodx = round(random.randrange(0, width - snake_block) / 10.0) * 10.0
                foody = round(random.randrange(0, height - snake_block) / 10.0) * 10.0
                game_over = False

pygame.quit()

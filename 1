import pygame
import random

# Initialize Pygame
pygame.init()

# Constants
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
FRUIT_SIZE = 50
BASKET_WIDTH = 100
BASKET_HEIGHT = 20
BASKET_Y_POSITION = SCREEN_HEIGHT - BASKET_HEIGHT - 10
FRUIT_FALL_SPEED = 5
BACKGROUND_COLOR = (135, 206, 250)
FRUIT_COLOR = (255, 0, 0)
BASKET_COLOR = (0, 255, 0)
SCORE_FONT_SIZE = 30

# Set up the display
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption('Fruit Catching Game')

# Set up fonts
score_font = pygame.font.Font(None, SCORE_FONT_SIZE)

# Game variables
basket_x = SCREEN_WIDTH // 2 - BASKET_WIDTH // 2
basket_speed = 0
fruits = []
score = 0

# Clock for controlling the frame rate
clock = pygame.time.Clock()

# Function to draw the basket
def draw_basket(x):
    pygame.draw.rect(screen, BASKET_COLOR, (x, BASKET_Y_POSITION, BASKET_WIDTH, BASKET_HEIGHT))

# Function to draw the fruit
def draw_fruit(fruit):
    pygame.draw.ellipse(screen, FRUIT_COLOR, (fruit['x'], fruit['y'], FRUIT_SIZE, FRUIT_SIZE))

# Function to draw the score
def draw_score(score):
    score_surface = score_font.render(f'Score: {score}', True, (0, 0, 0))
    screen.blit(score_surface, (10, 10))

# Main game loop
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                basket_speed = -10
            elif event.key == pygame.K_RIGHT:
                basket_speed = 10
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                basket_speed = 0

    # Update game state
    basket_x += basket_speed
    basket_x = max(0, min(basket_x, SCREEN_WIDTH - BASKET_WIDTH))  # Keep basket within screen bounds

    if random.randint(1, 20) == 1:  # Randomly drop a fruit
        fruit_x = random.randint(0, SCREEN_WIDTH - FRUIT_SIZE)
        fruits.append({'x': fruit_x, 'y': 0})

    for fruit in fruits:
        fruit['y'] += FRUIT_FALL_SPEED

    # Check for fruit catch
    for fruit in fruits[:]:
        if fruit['y'] + FRUIT_SIZE > BASKET_Y_POSITION and basket_x < fruit['x'] < basket_x + BASKET_WIDTH:
            fruits.remove(fruit)
            score += 1

    # Remove fruits that fall off the screen
    fruits = [fruit for fruit in fruits if fruit['y'] <= SCREEN_HEIGHT]

    # Draw everything
    screen.fill(BACKGROUND_COLOR)
    draw_basket(basket_x)
    for fruit in fruits:
        draw_fruit(fruit)
    draw_score(score)

    pygame.display.flip()

    # Cap the frame rate
    clock.tick(30)

# Quit Pygame
pygame.quit()

# 점수 초기화
score = 0
font = pygame.font.Font(None, 36)

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == new_fruit_event:
            fruit_x = random.randint(0, screen_width - fruit_width)
            fruits.append([fruit_x, -fruit_height])

    # 키 입력 처리
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < screen_width - player_width:
        player_x += player_speed

    # 과일 이동
    for fruit in fruits:
        fruit[1] += fruit_speed

    # 과일이 바닥에 닿으면 제거
    fruits = [fruit for fruit in fruits if fruit[1] < screen_height]

    # 충돌 감지 및 점수 업데이트
    for fruit in fruits:
        if (fruit[1] + fruit_height > player_y and 
            fruit[1] < player_y + player_height and 
            fruit[0] + fruit_width > player_x and 
            fruit[0] < player_x + player_width):
            fruits.remove(fruit)
            score += 1

    # 화면 업데이트
    screen.fill(WHITE)
    draw_player(player_x, player_y)
    for fruit in fruits:
        draw_fruit(fruit[0], fruit[1])

    # 점수 표시
    score_text = font.render(f"Score: {score}", True, BLACK)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()

    # 프레임 속도 설정
    clock.tick(30)

# Pygame 종료
pygame.quit()
